on:
  pull_request:
  push:
    branches:
      - main

name: test

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v1-rust-test"
          cache-all-crates: true
      - run: cargo test --all-features

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v1-rust-build"
          cache-all-crates: true
      - run: cargo build --release

  build-binaries:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Setup Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v1-rust-cross-compile"
          cache-all-crates: true
          cache-directories: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/

      - name: Setup Zig (for GoReleaser cross-compilation)
        uses: mlugg/setup-zig@v2
        with:
          version: "0.13.0"
          
      - name: Install cargo-zigbuild 
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-zigbuild
          
      - name: Cache cargo-zigbuild
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/cargo-zigbuild
            ~/.cargo/bin/zigbuild
          key: cargo-zigbuild-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:buildx-stable-1

      - name: GoReleaser (snapshot)
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: nightly
          args: release --config .goreleaser.release.yml --clean --snapshot
