on:
  pull_request:
  push:
    branches:
      - main

name: test

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - run: bun install --frozen-lockfile
      - run: bun run generate:licenses
      - run: bun run test:ci
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version
      - run: bun install --frozen-lockfile
      - run: bun run build:node
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-binaries:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: .bun-version

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: nightly
          args: release --config .goreleaser.release.yml --clean --snapshot
        env:
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
          TAG: test

  install-script-test:
    if: ${{ contains(github.event.head_commit.modified, 'install.sh') || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro:
          - ubuntu:latest
          - debian:latest
          - fedora:latest
          - archlinux:latest
          - manjarolinux/base:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test install script on ${{ matrix.distro }}
        uses: ./.github/actions/test-argonaut-install
        with:
          distro: ${{ matrix.distro }}
          install-source: latest-release
          test-mode: script
